version: 2.1

jobs:
  setup-image-of-docker:
    docker:
      - image: circleci/python:3.7.3
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv ~/.devops
            source ~/.devops/bin/activate
      - run:
          name: setup the code linting 
          command: |      
            source ~/.devops/bin/activate
            make install
            make lint   
      - setup_remote_docker:
          docker_layer_caching: true            
      - run:
          name: setup docker configurations
          command: |   
            source ~/.devops/bin/activate          
            docker build --tag=my_hello_world .
            docker image ls	  
      - run:
          name: Uploading the docker configurations 
          command: |   
            docker image ls	 
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag my_hello_world $DOCKER_USER/my_hello_world
            docker push 29062000123456/my_hello_world:latest
            
  deploy-image-of-docker:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: configure aws 
          command: |
            aws configure set aws_access_key_id $ACCESS_KEY_ID
            aws configure set aws_secret_access_key $SECRET_ACCESS_KEY
            aws configure set region $REGION
            aws --version
      - run:
          name: install kubectl and deploy test
          command: |          
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.16.8/2020-04-16/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client
            aws eks update-kubeconfig --name capstone-project-cluster --region $REGION           
            if [[ `kubectl get deployment | grep myhelloworld` = *"myhelloworld"* ]]
            then
                  echo "i am in"
                  kubectl rollout restart deployment/myhelloworld-deployment
            else
                  echo "i am out"
                  kubectl apply -f ./my_hello_world_svc.yml
                  sleep 10
                  kubectl get service
                  kubectl apply -f my_hello_world_deployment.yml
                  kubectl get deployment
                  kubectl get pods
                fi
workflows:
  default:
    jobs:
      - setup-image-of-docker
      - deploy-image-of-docker:
          requires: [setup-image-of-docker]
